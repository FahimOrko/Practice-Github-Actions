# ✅ Workflow name
name: NASA Project CI

# ✅ Define when this workflow should run
on:
  push:
    # Trigger the workflow on pushes to the 'main' branch
    branches: [main]
  pull_request:
    # Trigger the workflow on pull requests targeting the 'main' branch
    branches: [main]

# ✅ Define the jobs in this workflow
jobs:
  # --------------------------------------------------
  # 🔧 BUILD JOB: Runs install, build, and test tasks
  # --------------------------------------------------
  build:
    env:
      # CI=true disables interactive mode (e.g., watch mode for tests)
      # Many tools (like Create React App) run in watch mode by default, which is unsuitable for CI
      CI: true

      # MongoDB connection string for the test database
      MONGO_URL: mongodb://localhost/nasa

    strategy:
      # Run the job across multiple Node.js and MongoDB versions
      matrix:
        node-version: [23.x, 20.x]
        mongodb-version: ["4.2", "4.4"]

    # Specify the OS to run the job on
    runs-on: ubuntu-latest

    steps:
      # 📥 Checkout the repository code into the workflow
      - uses: actions/checkout@v3

      # 🟢 Set up Node.js using the matrix version
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # 🍃 Set up a temporary MongoDB instance for testing
      - name: Start MongoDB ${{ matrix.mongodb-version }}
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      # 📦 Install project dependencies
      - run: npm install

      # 🛠️ Build the frontend (client folder)
      - run: npm run build --prefix client

      # 🧪 Run backend (server) tests
      - run: npm run test --prefix server

  # --------------------------------------------------
  # 🚀 DEPLOY JOB: Only runs after a successful build
  # --------------------------------------------------
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Placeholder for actual deploy command (e.g., Vercel, SSH, etc.)
      - run: echo "Deploy step placeholder"
